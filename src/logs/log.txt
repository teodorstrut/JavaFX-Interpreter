ID:1
ExeStack:
--> (a= 2 + 3 * 5, (b= a + 1, print(b)))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> a= 2 + 3 * 5
--> (b= a + 1, print(b))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> a= 2 + 3 * 5
--> (b= a + 1, print(b))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (b= a + 1, print(b))
SymTable:
--> Key: a Value: 17
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (b= a + 1, print(b))
SymTable:
--> Key: a Value: 17
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> b= a + 1
--> print(b)
SymTable:
--> Key: a Value: 17
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> b= a + 1
--> print(b)
SymTable:
--> Key: a Value: 17
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> print(b)
SymTable:
--> Key: a Value: 17
--> Key: b Value: 18
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> print(b)
SymTable:
--> Key: a Value: 17
--> Key: b Value: 18
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
SymTable:
--> Key: a Value: 17
--> Key: b Value: 18
Out:
--> 18
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (a= 2 + 3 * 5, (b= a + 1, print(b)))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> a= 2 + 3 * 5
--> (b= a + 1, print(b))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> a= 2 + 3 * 5
--> (b= a + 1, print(b))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (b= a + 1, print(b))
SymTable:
--> Key: a Value: 17
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (b= a + 1, print(b))
SymTable:
--> Key: a Value: 17
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> b= a + 1
--> print(b)
SymTable:
--> Key: a Value: 17
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> b= a + 1
--> print(b)
SymTable:
--> Key: a Value: 17
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> print(b)
SymTable:
--> Key: a Value: 17
--> Key: b Value: 18
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> print(b)
SymTable:
--> Key: a Value: 17
--> Key: b Value: 18
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
SymTable:
--> Key: a Value: 17
--> Key: b Value: 18
Out:
--> 18
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (a= 2 + 3 * 5, (b= a + 1, print(b)))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> a= 2 + 3 * 5
--> (b= a + 1, print(b))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> a= 2 + 3 * 5
--> (b= a + 1, print(b))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (b= a + 1, print(b))
SymTable:
--> Key: a Value: 17
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (a= 2 + 3 * 5, (b= a + 1, print(b)))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> a= 2 + 3 * 5
--> (b= a + 1, print(b))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> a= 2 + 3 * 5
--> (b= a + 1, print(b))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (b= a + 1, print(b))
SymTable:
--> Key: a Value: 17
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (b= a + 1, print(b))
SymTable:
--> Key: a Value: 17
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> b= a + 1
--> print(b)
SymTable:
--> Key: a Value: 17
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> b= a + 1
--> print(b)
SymTable:
--> Key: a Value: 17
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> print(b)
SymTable:
--> Key: a Value: 17
--> Key: b Value: 18
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> print(b)
SymTable:
--> Key: a Value: 17
--> Key: b Value: 18
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
SymTable:
--> Key: a Value: 17
--> Key: b Value: 18
Out:
--> 18
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (v= 2, print(v))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 2
--> print(v)
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 2
--> print(v)
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> print(v)
SymTable:
--> Key: v Value: 2
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> print(v)
SymTable:
--> Key: v Value: 2
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
SymTable:
--> Key: v Value: 2
Out:
--> 2
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (v= 2, print(v))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 2
--> print(v)
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (v= 2, print(v))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 2
--> print(v)
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 2
--> print(v)
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> print(v)
SymTable:
--> Key: v Value: 2
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (v= 2, print(v))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 2
--> print(v)
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 2
--> print(v)
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> print(v)
SymTable:
--> Key: v Value: 2
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> print(v)
SymTable:
--> Key: v Value: 2
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
SymTable:
--> Key: v Value: 2
Out:
--> 2
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (a= 2 + 3 * 5, (b= a + 1, print(b)))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> a= 2 + 3 * 5
--> (b= a + 1, print(b))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> a= 2 + 3 * 5
--> (b= a + 1, print(b))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (b= a + 1, print(b))
SymTable:
--> Key: a Value: 17
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (b= a + 1, print(b))
SymTable:
--> Key: a Value: 17
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> b= a + 1
--> print(b)
SymTable:
--> Key: a Value: 17
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> b= a + 1
--> print(b)
SymTable:
--> Key: a Value: 17
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> print(b)
SymTable:
--> Key: a Value: 17
--> Key: b Value: 18
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> print(b)
SymTable:
--> Key: a Value: 17
--> Key: b Value: 18
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
SymTable:
--> Key: a Value: 17
--> Key: b Value: 18
Out:
--> 18
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (a= 2 + 3 * 5, (b= a + 1, print(b)))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> a= 2 + 3 * 5
--> (b= a + 1, print(b))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> a= 2 + 3 * 5
--> (b= a + 1, print(b))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (b= a + 1, print(b))
SymTable:
--> Key: a Value: 17
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (b= a + 1, print(b))
SymTable:
--> Key: a Value: 17
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> b= a + 1
--> print(b)
SymTable:
--> Key: a Value: 17
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> b= a + 1
--> print(b)
SymTable:
--> Key: a Value: 17
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> print(b)
SymTable:
--> Key: a Value: 17
--> Key: b Value: 18
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> print(b)
SymTable:
--> Key: a Value: 17
--> Key: b Value: 18
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
SymTable:
--> Key: a Value: 17
--> Key: b Value: 18
Out:
--> 18
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (v= 2, print(v))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 2
--> print(v)
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 2
--> print(v)
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> print(v)
SymTable:
--> Key: v Value: 2
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> print(v)
SymTable:
--> Key: v Value: 2
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
SymTable:
--> Key: v Value: 2
Out:
--> 2
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (v= 2, print(v))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 2
--> print(v)
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 2
--> print(v)
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> print(v)
SymTable:
--> Key: v Value: 2
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> print(v)
SymTable:
--> Key: v Value: 2
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
SymTable:
--> Key: v Value: 2
Out:
--> 2
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (a= 2 + 3 * 5, (b= a + 1, print(b)))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> a= 2 + 3 * 5
--> (b= a + 1, print(b))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> a= 2 + 3 * 5
--> (b= a + 1, print(b))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (b= a + 1, print(b))
SymTable:
--> Key: a Value: 17
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (b= a + 1, print(b))
SymTable:
--> Key: a Value: 17
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> b= a + 1
--> print(b)
SymTable:
--> Key: a Value: 17
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> b= a + 1
--> print(b)
SymTable:
--> Key: a Value: 17
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> print(b)
SymTable:
--> Key: a Value: 17
--> Key: b Value: 18
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> print(b)
SymTable:
--> Key: a Value: 17
--> Key: b Value: 18
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
SymTable:
--> Key: a Value: 17
--> Key: b Value: 18
Out:
--> 18
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (a= 2 + 3 * 5, (b= a + 1, print(b)))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> a= 2 + 3 * 5
--> (b= a + 1, print(b))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> a= 2 + 3 * 5
--> (b= a + 1, print(b))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (b= a + 1, print(b))
SymTable:
--> Key: a Value: 17
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (b= a + 1, print(b))
SymTable:
--> Key: a Value: 17
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> b= a + 1
--> print(b)
SymTable:
--> Key: a Value: 17
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> b= a + 1
--> print(b)
SymTable:
--> Key: a Value: 17
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> print(b)
SymTable:
--> Key: a Value: 17
--> Key: b Value: 18
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> print(b)
SymTable:
--> Key: a Value: 17
--> Key: b Value: 18
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
SymTable:
--> Key: a Value: 17
--> Key: b Value: 18
Out:
--> 18
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (a= 2 + 3 * 5, (b= a + 1, print(b)))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> a= 2 + 3 * 5
--> (b= a + 1, print(b))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (a= 2 + 3 * 5, (b= a + 1, print(b)))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> a= 2 + 3 * 5
--> (b= a + 1, print(b))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> a= 2 + 3 * 5
--> (b= a + 1, print(b))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (b= a + 1, print(b))
SymTable:
--> Key: a Value: 17
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (b= a + 1, print(b))
SymTable:
--> Key: a Value: 17
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> b= a + 1
--> print(b)
SymTable:
--> Key: a Value: 17
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> b= a + 1
--> print(b)
SymTable:
--> Key: a Value: 17
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> print(b)
SymTable:
--> Key: a Value: 17
--> Key: b Value: 18
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> print(b)
SymTable:
--> Key: a Value: 17
--> Key: b Value: 18
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
SymTable:
--> Key: a Value: 17
--> Key: b Value: 18
Out:
--> 18
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (a= 2 + 3 * 5, (b= a + 1, print(b)))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> a= 2 + 3 * 5
--> (b= a + 1, print(b))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> a= 2 + 3 * 5
--> (b= a + 1, print(b))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (b= a + 1, print(b))
SymTable:
--> Key: a Value: 17
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (b= a + 1, print(b))
SymTable:
--> Key: a Value: 17
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> b= a + 1
--> print(b)
SymTable:
--> Key: a Value: 17
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> b= a + 1
--> print(b)
SymTable:
--> Key: a Value: 17
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> print(b)
SymTable:
--> Key: a Value: 17
--> Key: b Value: 18
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> print(b)
SymTable:
--> Key: a Value: 17
--> Key: b Value: 18
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
SymTable:
--> Key: a Value: 17
--> Key: b Value: 18
Out:
--> 18
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> ((v= 10, new(a, 22)), (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a)))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (v= 10, new(a, 22))
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (v= 10, new(a, 22))
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> Fork((wH(a, 30), (v= 32, (print(v), print(rH(a))))))
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> Fork((wH(a, 30), (v= 32, (print(v), print(rH(a))))))
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> (wH(a, 30), (v= 32, (print(v), print(rH(a)))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> (wH(a, 30), (v= 32, (print(v), print(rH(a)))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> wH(a, 30)
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> wH(a, 30)
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> v= 32
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> v= 32
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
--> ((v= 10, new(a, 22)), (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a)))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (v= 10, new(a, 22))
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (v= 10, new(a, 22))
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> Fork((wH(a, 30), (v= 32, (print(v), print(rH(a))))))
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> Fork((wH(a, 30), (v= 32, (print(v), print(rH(a))))))
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> (wH(a, 30), (v= 32, (print(v), print(rH(a)))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> (wH(a, 30), (v= 32, (print(v), print(rH(a)))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> wH(a, 30)
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> wH(a, 30)
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> v= 32
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> v= 32
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
--> ((v= 10, new(a, 22)), (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a)))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (v= 10, new(a, 22))
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (v= 10, new(a, 22))
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> Fork((wH(a, 30), (v= 32, (print(v), print(rH(a))))))
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> Fork((wH(a, 30), (v= 32, (print(v), print(rH(a))))))
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> (wH(a, 30), (v= 32, (print(v), print(rH(a)))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> ((v= 10, new(a, 22)), (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a)))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (v= 10, new(a, 22))
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (v= 10, new(a, 22))
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> Fork((wH(a, 30), (v= 32, (print(v), print(rH(a))))))
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> Fork((wH(a, 30), (v= 32, (print(v), print(rH(a))))))
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> (wH(a, 30), (v= 32, (print(v), print(rH(a)))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> (wH(a, 30), (v= 32, (print(v), print(rH(a)))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> wH(a, 30)
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> wH(a, 30)
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> v= 32
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> v= 32
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
--> ((v= 10, new(a, 22)), (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a)))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (v= 10, new(a, 22))
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (v= 10, new(a, 22))
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> Fork((wH(a, 30), (v= 32, (print(v), print(rH(a))))))
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> Fork((wH(a, 30), (v= 32, (print(v), print(rH(a))))))
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> (wH(a, 30), (v= 32, (print(v), print(rH(a)))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> (wH(a, 30), (v= 32, (print(v), print(rH(a)))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> wH(a, 30)
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> wH(a, 30)
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> v= 32
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> v= 32
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
--> ((v= 10, new(a, 22)), (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a)))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (v= 10, new(a, 22))
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (v= 10, new(a, 22))
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> Fork((wH(a, 30), (v= 32, (print(v), print(rH(a))))))
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> Fork((wH(a, 30), (v= 32, (print(v), print(rH(a))))))
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> (wH(a, 30), (v= 32, (print(v), print(rH(a)))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> (wH(a, 30), (v= 32, (print(v), print(rH(a)))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> wH(a, 30)
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> wH(a, 30)
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> v= 32
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> v= 32
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
--> ((v= 10, new(a, 22)), (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a)))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (v= 10, new(a, 22))
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (v= 10, new(a, 22))
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> Fork((wH(a, 30), (v= 32, (print(v), print(rH(a))))))
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> Fork((wH(a, 30), (v= 32, (print(v), print(rH(a))))))
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> (wH(a, 30), (v= 32, (print(v), print(rH(a)))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> (wH(a, 30), (v= 32, (print(v), print(rH(a)))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> wH(a, 30)
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> wH(a, 30)
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> v= 32
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> v= 32
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
--> ((v= 10, new(a, 22)), (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a)))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (v= 10, new(a, 22))
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (v= 10, new(a, 22))
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> Fork((wH(a, 30), (v= 32, (print(v), print(rH(a))))))
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> Fork((wH(a, 30), (v= 32, (print(v), print(rH(a))))))
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> (wH(a, 30), (v= 32, (print(v), print(rH(a)))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> (wH(a, 30), (v= 32, (print(v), print(rH(a)))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> wH(a, 30)
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> ((v= 10, new(a, 22)), (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a)))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (v= 10, new(a, 22))
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (v= 10, new(a, 22))
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> Fork((wH(a, 30), (v= 32, (print(v), print(rH(a))))))
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> Fork((wH(a, 30), (v= 32, (print(v), print(rH(a))))))
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> (wH(a, 30), (v= 32, (print(v), print(rH(a)))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> (wH(a, 30), (v= 32, (print(v), print(rH(a)))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> wH(a, 30)
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> wH(a, 30)
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> v= 32
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> v= 32
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
--> ((v= 10, new(a, 22)), (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a)))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (v= 10, new(a, 22))
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> ((v= 10, new(a, 22)), (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a)))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (v= 10, new(a, 22))
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (v= 10, new(a, 22))
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> Fork((wH(a, 30), (v= 32, (print(v), print(rH(a))))))
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> Fork((wH(a, 30), (v= 32, (print(v), print(rH(a))))))
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> (wH(a, 30), (v= 32, (print(v), print(rH(a)))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> (wH(a, 30), (v= 32, (print(v), print(rH(a)))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> wH(a, 30)
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> wH(a, 30)
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> v= 32
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> v= 32
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
--> ((v= 10, new(a, 22)), (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a)))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (v= 10, new(a, 22))
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (v= 10, new(a, 22))
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> Fork((wH(a, 30), (v= 32, (print(v), print(rH(a))))))
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> Fork((wH(a, 30), (v= 32, (print(v), print(rH(a))))))
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> (wH(a, 30), (v= 32, (print(v), print(rH(a)))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> (wH(a, 30), (v= 32, (print(v), print(rH(a)))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> wH(a, 30)
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> wH(a, 30)
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> v= 32
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> v= 32
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
--> ((v= 10, new(a, 22)), (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a)))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (v= 10, new(a, 22))
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (v= 10, new(a, 22))
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> Fork((wH(a, 30), (v= 32, (print(v), print(rH(a))))))
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> Fork((wH(a, 30), (v= 32, (print(v), print(rH(a))))))
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> (wH(a, 30), (v= 32, (print(v), print(rH(a)))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> (wH(a, 30), (v= 32, (print(v), print(rH(a)))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> wH(a, 30)
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> wH(a, 30)
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> v= 32
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> v= 32
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
--> ((v= 10, new(a, 22)), (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a)))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (v= 10, new(a, 22))
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (v= 10, new(a, 22))
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> Fork((wH(a, 30), (v= 32, (print(v), print(rH(a))))))
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> Fork((wH(a, 30), (v= 32, (print(v), print(rH(a))))))
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> (wH(a, 30), (v= 32, (print(v), print(rH(a)))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> (wH(a, 30), (v= 32, (print(v), print(rH(a)))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> wH(a, 30)
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> wH(a, 30)
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> v= 32
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> v= 32
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
--> ((v= 10, new(a, 22)), (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a)))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (v= 10, new(a, 22))
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (v= 10, new(a, 22))
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> Fork((wH(a, 30), (v= 32, (print(v), print(rH(a))))))
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> Fork((wH(a, 30), (v= 32, (print(v), print(rH(a))))))
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> (wH(a, 30), (v= 32, (print(v), print(rH(a)))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> (wH(a, 30), (v= 32, (print(v), print(rH(a)))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> wH(a, 30)
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> wH(a, 30)
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> v= 32
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> v= 32
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
--> ((v= 10, new(a, 22)), (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a)))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (v= 10, new(a, 22))
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (v= 10, new(a, 22))
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> Fork((wH(a, 30), (v= 32, (print(v), print(rH(a))))))
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> Fork((wH(a, 30), (v= 32, (print(v), print(rH(a))))))
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> (wH(a, 30), (v= 32, (print(v), print(rH(a)))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> (wH(a, 30), (v= 32, (print(v), print(rH(a)))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> wH(a, 30)
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> wH(a, 30)
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> v= 32
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> v= 32
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
--> ((v= 10, new(a, 22)), (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a)))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (v= 10, new(a, 22))
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (v= 10, new(a, 22))
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> Fork((wH(a, 30), (v= 32, (print(v), print(rH(a))))))
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> Fork((wH(a, 30), (v= 32, (print(v), print(rH(a))))))
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> (wH(a, 30), (v= 32, (print(v), print(rH(a)))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> (wH(a, 30), (v= 32, (print(v), print(rH(a)))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> wH(a, 30)
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> ((v= 10, new(a, 22)), (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a)))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (v= 10, new(a, 22))
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (v= 10, new(a, 22))
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> Fork((wH(a, 30), (v= 32, (print(v), print(rH(a))))))
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> Fork((wH(a, 30), (v= 32, (print(v), print(rH(a))))))
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> (wH(a, 30), (v= 32, (print(v), print(rH(a)))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> (wH(a, 30), (v= 32, (print(v), print(rH(a)))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> wH(a, 30)
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> wH(a, 30)
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> v= 32
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> v= 32
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
--> ((v= 10, new(a, 22)), (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a)))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (v= 10, new(a, 22))
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (v= 10, new(a, 22))
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> Fork((wH(a, 30), (v= 32, (print(v), print(rH(a))))))
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> Fork((wH(a, 30), (v= 32, (print(v), print(rH(a))))))
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> (wH(a, 30), (v= 32, (print(v), print(rH(a)))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> (wH(a, 30), (v= 32, (print(v), print(rH(a)))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> wH(a, 30)
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> wH(a, 30)
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> v= 32
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> v= 32
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
--> ((v= 10, new(a, 22)), (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a)))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (v= 10, new(a, 22))
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (v= 10, new(a, 22))
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> Fork((wH(a, 30), (v= 32, (print(v), print(rH(a))))))
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> Fork((wH(a, 30), (v= 32, (print(v), print(rH(a))))))
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> (wH(a, 30), (v= 32, (print(v), print(rH(a)))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> (wH(a, 30), (v= 32, (print(v), print(rH(a)))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> wH(a, 30)
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> wH(a, 30)
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> v= 32
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> v= 32
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
--> ((openFile(fname, src/testfiles/test.in), ReadFile(fname, val)), (print(val), (If val Then (ReadFile(fname, val), print(val)) Else print(0), CloseRFile(fname))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (openFile(fname, src/testfiles/test.in), ReadFile(fname, val))
--> (print(val), (If val Then (ReadFile(fname, val), print(val)) Else print(0), CloseRFile(fname)))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (openFile(fname, src/testfiles/test.in), ReadFile(fname, val))
--> (print(val), (If val Then (ReadFile(fname, val), print(val)) Else print(0), CloseRFile(fname)))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> openFile(fname, src/testfiles/test.in)
--> ReadFile(fname, val)
--> (print(val), (If val Then (ReadFile(fname, val), print(val)) Else print(0), CloseRFile(fname)))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> openFile(fname, src/testfiles/test.in)
--> ReadFile(fname, val)
--> (print(val), (If val Then (ReadFile(fname, val), print(val)) Else print(0), CloseRFile(fname)))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> ReadFile(fname, val)
--> (print(val), (If val Then (ReadFile(fname, val), print(val)) Else print(0), CloseRFile(fname)))
SymTable:
--> Key: fname Value: 1
Out:
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
--> ReadFile(fname, val)
--> (print(val), (If val Then (ReadFile(fname, val), print(val)) Else print(0), CloseRFile(fname)))
SymTable:
--> Key: fname Value: 1
Out:
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
--> (print(val), (If val Then (ReadFile(fname, val), print(val)) Else print(0), CloseRFile(fname)))
SymTable:
--> Key: val Value: 15
--> Key: fname Value: 1
Out:
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
--> (print(val), (If val Then (ReadFile(fname, val), print(val)) Else print(0), CloseRFile(fname)))
SymTable:
--> Key: val Value: 15
--> Key: fname Value: 1
Out:
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
--> print(val)
--> (If val Then (ReadFile(fname, val), print(val)) Else print(0), CloseRFile(fname))
SymTable:
--> Key: val Value: 15
--> Key: fname Value: 1
Out:
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
--> print(val)
--> (If val Then (ReadFile(fname, val), print(val)) Else print(0), CloseRFile(fname))
SymTable:
--> Key: val Value: 15
--> Key: fname Value: 1
Out:
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
--> (If val Then (ReadFile(fname, val), print(val)) Else print(0), CloseRFile(fname))
SymTable:
--> Key: val Value: 15
--> Key: fname Value: 1
Out:
--> 15
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
--> (If val Then (ReadFile(fname, val), print(val)) Else print(0), CloseRFile(fname))
SymTable:
--> Key: val Value: 15
--> Key: fname Value: 1
Out:
--> 15
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
--> If val Then (ReadFile(fname, val), print(val)) Else print(0)
--> CloseRFile(fname)
SymTable:
--> Key: val Value: 15
--> Key: fname Value: 1
Out:
--> 15
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
--> If val Then (ReadFile(fname, val), print(val)) Else print(0)
--> CloseRFile(fname)
SymTable:
--> Key: val Value: 15
--> Key: fname Value: 1
Out:
--> 15
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
--> (ReadFile(fname, val), print(val))
--> CloseRFile(fname)
SymTable:
--> Key: val Value: 15
--> Key: fname Value: 1
Out:
--> 15
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
--> (ReadFile(fname, val), print(val))
--> CloseRFile(fname)
SymTable:
--> Key: val Value: 15
--> Key: fname Value: 1
Out:
--> 15
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
--> ReadFile(fname, val)
--> print(val)
--> CloseRFile(fname)
SymTable:
--> Key: val Value: 15
--> Key: fname Value: 1
Out:
--> 15
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
--> ReadFile(fname, val)
--> print(val)
--> CloseRFile(fname)
SymTable:
--> Key: val Value: 15
--> Key: fname Value: 1
Out:
--> 15
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
--> print(val)
--> CloseRFile(fname)
SymTable:
--> Key: val Value: 50
--> Key: fname Value: 1
Out:
--> 15
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
--> print(val)
--> CloseRFile(fname)
SymTable:
--> Key: val Value: 50
--> Key: fname Value: 1
Out:
--> 15
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
--> CloseRFile(fname)
SymTable:
--> Key: val Value: 50
--> Key: fname Value: 1
Out:
--> 15
--> 50
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
--> CloseRFile(fname)
SymTable:
--> Key: val Value: 50
--> Key: fname Value: 1
Out:
--> 15
--> 50
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
SymTable:
--> Key: val Value: 50
--> Key: fname Value: 1
Out:
--> 15
--> 50
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> ((v= 10, new(a, 22)), (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a)))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (v= 10, new(a, 22))
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (v= 10, new(a, 22))
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> Fork((wH(a, 30), (v= 32, (print(v), print(rH(a))))))
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> Fork((wH(a, 30), (v= 32, (print(v), print(rH(a))))))
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> (wH(a, 30), (v= 32, (print(v), print(rH(a)))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> (wH(a, 30), (v= 32, (print(v), print(rH(a)))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> wH(a, 30)
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> wH(a, 30)
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> v= 32
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> v= 32
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
--> ((v= 10, new(a, 22)), (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a)))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (v= 10, new(a, 22))
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (v= 10, new(a, 22))
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> Fork((wH(a, 30), (v= 32, (print(v), print(rH(a))))))
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> Fork((wH(a, 30), (v= 32, (print(v), print(rH(a))))))
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> (wH(a, 30), (v= 32, (print(v), print(rH(a)))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> (wH(a, 30), (v= 32, (print(v), print(rH(a)))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> wH(a, 30)
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> wH(a, 30)
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> v= 32
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> v= 32
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
--> ((v= 10, new(a, 22)), (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a)))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (v= 10, new(a, 22))
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (v= 10, new(a, 22))
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> Fork((wH(a, 30), (v= 32, (print(v), print(rH(a))))))
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> Fork((wH(a, 30), (v= 32, (print(v), print(rH(a))))))
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> (wH(a, 30), (v= 32, (print(v), print(rH(a)))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> (wH(a, 30), (v= 32, (print(v), print(rH(a)))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> wH(a, 30)
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> wH(a, 30)
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> v= 32
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> v= 32
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
--> ((v= 10, new(a, 22)), (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a)))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (v= 10, new(a, 22))
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (v= 10, new(a, 22))
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> Fork((wH(a, 30), (v= 32, (print(v), print(rH(a))))))
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> Fork((wH(a, 30), (v= 32, (print(v), print(rH(a))))))
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> (wH(a, 30), (v= 32, (print(v), print(rH(a)))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> (wH(a, 30), (v= 32, (print(v), print(rH(a)))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> wH(a, 30)
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> wH(a, 30)
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> v= 32
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> v= 32
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
--> (v= 6, (while(v - 4)(print(v), v= v - 1), print(v)))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 6
--> (while(v - 4)(print(v), v= v - 1), print(v))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 6
--> (while(v - 4)(print(v), v= v - 1), print(v))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (while(v - 4)(print(v), v= v - 1), print(v))
SymTable:
--> Key: v Value: 6
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (while(v - 4)(print(v), v= v - 1), print(v))
SymTable:
--> Key: v Value: 6
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> while(v - 4)(print(v), v= v - 1)
--> print(v)
SymTable:
--> Key: v Value: 6
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> while(v - 4)(print(v), v= v - 1)
--> print(v)
SymTable:
--> Key: v Value: 6
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (print(v), v= v - 1)
--> while(v - 4)(print(v), v= v - 1)
--> print(v)
SymTable:
--> Key: v Value: 6
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (print(v), v= v - 1)
--> while(v - 4)(print(v), v= v - 1)
--> print(v)
SymTable:
--> Key: v Value: 6
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> print(v)
--> v= v - 1
--> while(v - 4)(print(v), v= v - 1)
--> print(v)
SymTable:
--> Key: v Value: 6
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> ((openFile(fname, src/testfiles/test.in), ReadFile(fname, val)), (print(val), (If val Then (ReadFile(fname, val), print(val)) Else print(0), CloseRFile(fname))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (openFile(fname, src/testfiles/test.in), ReadFile(fname, val))
--> (print(val), (If val Then (ReadFile(fname, val), print(val)) Else print(0), CloseRFile(fname)))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (openFile(fname, src/testfiles/test.in), ReadFile(fname, val))
--> (print(val), (If val Then (ReadFile(fname, val), print(val)) Else print(0), CloseRFile(fname)))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> openFile(fname, src/testfiles/test.in)
--> ReadFile(fname, val)
--> (print(val), (If val Then (ReadFile(fname, val), print(val)) Else print(0), CloseRFile(fname)))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> openFile(fname, src/testfiles/test.in)
--> ReadFile(fname, val)
--> (print(val), (If val Then (ReadFile(fname, val), print(val)) Else print(0), CloseRFile(fname)))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> ReadFile(fname, val)
--> (print(val), (If val Then (ReadFile(fname, val), print(val)) Else print(0), CloseRFile(fname)))
SymTable:
--> Key: fname Value: 1
Out:
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
--> ReadFile(fname, val)
--> (print(val), (If val Then (ReadFile(fname, val), print(val)) Else print(0), CloseRFile(fname)))
SymTable:
--> Key: fname Value: 1
Out:
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
--> (print(val), (If val Then (ReadFile(fname, val), print(val)) Else print(0), CloseRFile(fname)))
SymTable:
--> Key: val Value: 15
--> Key: fname Value: 1
Out:
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
--> (print(val), (If val Then (ReadFile(fname, val), print(val)) Else print(0), CloseRFile(fname)))
SymTable:
--> Key: val Value: 15
--> Key: fname Value: 1
Out:
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
--> print(val)
--> (If val Then (ReadFile(fname, val), print(val)) Else print(0), CloseRFile(fname))
SymTable:
--> Key: val Value: 15
--> Key: fname Value: 1
Out:
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
--> print(val)
--> (If val Then (ReadFile(fname, val), print(val)) Else print(0), CloseRFile(fname))
SymTable:
--> Key: val Value: 15
--> Key: fname Value: 1
Out:
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
--> (If val Then (ReadFile(fname, val), print(val)) Else print(0), CloseRFile(fname))
SymTable:
--> Key: val Value: 15
--> Key: fname Value: 1
Out:
--> 15
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
--> (If val Then (ReadFile(fname, val), print(val)) Else print(0), CloseRFile(fname))
SymTable:
--> Key: val Value: 15
--> Key: fname Value: 1
Out:
--> 15
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
--> If val Then (ReadFile(fname, val), print(val)) Else print(0)
--> CloseRFile(fname)
SymTable:
--> Key: val Value: 15
--> Key: fname Value: 1
Out:
--> 15
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
--> If val Then (ReadFile(fname, val), print(val)) Else print(0)
--> CloseRFile(fname)
SymTable:
--> Key: val Value: 15
--> Key: fname Value: 1
Out:
--> 15
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
--> (ReadFile(fname, val), print(val))
--> CloseRFile(fname)
SymTable:
--> Key: val Value: 15
--> Key: fname Value: 1
Out:
--> 15
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
--> (ReadFile(fname, val), print(val))
--> CloseRFile(fname)
SymTable:
--> Key: val Value: 15
--> Key: fname Value: 1
Out:
--> 15
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
--> ReadFile(fname, val)
--> print(val)
--> CloseRFile(fname)
SymTable:
--> Key: val Value: 15
--> Key: fname Value: 1
Out:
--> 15
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
--> ReadFile(fname, val)
--> print(val)
--> CloseRFile(fname)
SymTable:
--> Key: val Value: 15
--> Key: fname Value: 1
Out:
--> 15
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
--> print(val)
--> CloseRFile(fname)
SymTable:
--> Key: val Value: 50
--> Key: fname Value: 1
Out:
--> 15
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
--> print(val)
--> CloseRFile(fname)
SymTable:
--> Key: val Value: 50
--> Key: fname Value: 1
Out:
--> 15
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
--> CloseRFile(fname)
SymTable:
--> Key: val Value: 50
--> Key: fname Value: 1
Out:
--> 15
--> 50
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
--> CloseRFile(fname)
SymTable:
--> Key: val Value: 50
--> Key: fname Value: 1
Out:
--> 15
--> 50
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
SymTable:
--> Key: val Value: 50
--> Key: fname Value: 1
Out:
--> 15
--> 50
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> ((v= 10, new(a, 22)), (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a)))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (v= 10, new(a, 22))
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (v= 10, new(a, 22))
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> Fork((wH(a, 30), (v= 32, (print(v), print(rH(a))))))
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> Fork((wH(a, 30), (v= 32, (print(v), print(rH(a))))))
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> (wH(a, 30), (v= 32, (print(v), print(rH(a)))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> (wH(a, 30), (v= 32, (print(v), print(rH(a)))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> wH(a, 30)
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> wH(a, 30)
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> v= 32
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> v= 32
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
--> ((v= 10, new(a, 22)), (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a)))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (v= 10, new(a, 22))
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (v= 10, new(a, 22))
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> Fork((wH(a, 30), (v= 32, (print(v), print(rH(a))))))
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> Fork((wH(a, 30), (v= 32, (print(v), print(rH(a))))))
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> (wH(a, 30), (v= 32, (print(v), print(rH(a)))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> ((v= 10, new(a, 22)), (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a)))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (v= 10, new(a, 22))
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (v= 10, new(a, 22))
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> Fork((wH(a, 30), (v= 32, (print(v), print(rH(a))))))
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> Fork((wH(a, 30), (v= 32, (print(v), print(rH(a))))))
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> (wH(a, 30), (v= 32, (print(v), print(rH(a)))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> (wH(a, 30), (v= 32, (print(v), print(rH(a)))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> wH(a, 30)
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> wH(a, 30)
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> v= 32
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> v= 32
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
--> ((v= 10, new(a, 22)), (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a)))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (v= 10, new(a, 22))
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (v= 10, new(a, 22))
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> Fork((wH(a, 30), (v= 32, (print(v), print(rH(a))))))
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> ((v= 10, new(a, 22)), (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a)))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (v= 10, new(a, 22))
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (v= 10, new(a, 22))
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> Fork((wH(a, 30), (v= 32, (print(v), print(rH(a))))))
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> Fork((wH(a, 30), (v= 32, (print(v), print(rH(a))))))
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> (wH(a, 30), (v= 32, (print(v), print(rH(a)))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> (wH(a, 30), (v= 32, (print(v), print(rH(a)))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> wH(a, 30)
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> wH(a, 30)
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> v= 32
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> v= 32
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
--> (v= 10, (new(v, 20), (new(a, 22), (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6))))))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> (new(v, 20), (new(a, 22), (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6)))))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> (new(v, 20), (new(a, 22), (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6)))))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (new(v, 20), (new(a, 22), (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6)))))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (new(v, 20), (new(a, 22), (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6)))))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(v, 20)
--> (new(a, 22), (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6))))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(v, 20)
--> (new(a, 22), (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6))))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (new(a, 22), (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6))))))
SymTable:
--> Key: v Value: 1
Out:
FileTable:
Heap:
--> Key: 1 Value: 20
------------------------------------------
ID:1
ExeStack:
--> (new(a, 22), (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6))))))
SymTable:
--> Key: v Value: 1
Out:
FileTable:
Heap:
--> Key: 1 Value: 20
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6)))))
SymTable:
--> Key: v Value: 1
Out:
FileTable:
Heap:
--> Key: 1 Value: 20
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6)))))
SymTable:
--> Key: v Value: 1
Out:
FileTable:
Heap:
--> Key: 1 Value: 20
------------------------------------------
ID:1
ExeStack:
--> (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6)))))
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6)))))
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 22
------------------------------------------
ID:1
ExeStack:
--> wH(a, 30)
--> (print(a), (print(rH(a)), (a= 0, print(6))))
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 22
------------------------------------------
ID:1
ExeStack:
--> wH(a, 30)
--> (print(a), (print(rH(a)), (a= 0, print(6))))
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (print(a), (print(rH(a)), (a= 0, print(6))))
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 30
------------------------------------------
ID:1
ExeStack:
--> (print(a), (print(rH(a)), (a= 0, print(6))))
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 30
------------------------------------------
ID:1
ExeStack:
--> print(a)
--> (print(rH(a)), (a= 0, print(6)))
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 30
------------------------------------------
ID:1
ExeStack:
--> print(a)
--> (print(rH(a)), (a= 0, print(6)))
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 30
------------------------------------------
ID:1
ExeStack:
--> (print(rH(a)), (a= 0, print(6)))
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
--> 2
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 30
------------------------------------------
ID:1
ExeStack:
--> (print(rH(a)), (a= 0, print(6)))
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
--> 2
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 30
------------------------------------------
ID:1
ExeStack:
--> print(rH(a))
--> (a= 0, print(6))
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
--> 2
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 30
------------------------------------------
ID:1
ExeStack:
--> print(rH(a))
--> (a= 0, print(6))
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
--> 2
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 30
------------------------------------------
ID:1
ExeStack:
--> (a= 0, print(6))
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
--> 2
--> 30
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 30
------------------------------------------
ID:1
ExeStack:
--> (a= 0, print(6))
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
--> 2
--> 30
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 30
------------------------------------------
ID:1
ExeStack:
--> a= 0
--> print(6)
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
--> 2
--> 30
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 30
------------------------------------------
ID:1
ExeStack:
--> a= 0
--> print(6)
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
--> 2
--> 30
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 30
------------------------------------------
ID:1
ExeStack:
--> print(6)
SymTable:
--> Key: a Value: 0
--> Key: v Value: 1
Out:
--> 2
--> 30
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 30
------------------------------------------
ID:1
ExeStack:
--> print(6)
SymTable:
--> Key: a Value: 0
--> Key: v Value: 1
Out:
--> 2
--> 30
FileTable:
Heap:
--> Key: 1 Value: 20
------------------------------------------
ID:1
ExeStack:
SymTable:
--> Key: a Value: 0
--> Key: v Value: 1
Out:
--> 2
--> 30
--> 6
FileTable:
Heap:
--> Key: 1 Value: 20
------------------------------------------
ID:1
ExeStack:
--> (v= 10, (new(v, 20), (new(a, 22), (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6))))))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> (new(v, 20), (new(a, 22), (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6)))))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> (new(v, 20), (new(a, 22), (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6)))))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (new(v, 20), (new(a, 22), (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6)))))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (new(v, 20), (new(a, 22), (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6)))))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(v, 20)
--> (new(a, 22), (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6))))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(v, 20)
--> (new(a, 22), (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6))))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (new(a, 22), (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6))))))
SymTable:
--> Key: v Value: 1
Out:
FileTable:
Heap:
--> Key: 1 Value: 20
------------------------------------------
ID:1
ExeStack:
--> (new(a, 22), (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6))))))
SymTable:
--> Key: v Value: 1
Out:
FileTable:
Heap:
--> Key: 1 Value: 20
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6)))))
SymTable:
--> Key: v Value: 1
Out:
FileTable:
Heap:
--> Key: 1 Value: 20
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6)))))
SymTable:
--> Key: v Value: 1
Out:
FileTable:
Heap:
--> Key: 1 Value: 20
------------------------------------------
ID:1
ExeStack:
--> (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6)))))
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6)))))
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 22
------------------------------------------
ID:1
ExeStack:
--> wH(a, 30)
--> (print(a), (print(rH(a)), (a= 0, print(6))))
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 22
------------------------------------------
ID:1
ExeStack:
--> wH(a, 30)
--> (print(a), (print(rH(a)), (a= 0, print(6))))
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (print(a), (print(rH(a)), (a= 0, print(6))))
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 30
------------------------------------------
ID:1
ExeStack:
--> (print(a), (print(rH(a)), (a= 0, print(6))))
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 30
------------------------------------------
ID:1
ExeStack:
--> print(a)
--> (print(rH(a)), (a= 0, print(6)))
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 30
------------------------------------------
ID:1
ExeStack:
--> print(a)
--> (print(rH(a)), (a= 0, print(6)))
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 30
------------------------------------------
ID:1
ExeStack:
--> (print(rH(a)), (a= 0, print(6)))
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
--> 2
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 30
------------------------------------------
ID:1
ExeStack:
--> (print(rH(a)), (a= 0, print(6)))
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
--> 2
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 30
------------------------------------------
ID:1
ExeStack:
--> print(rH(a))
--> (a= 0, print(6))
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
--> 2
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 30
------------------------------------------
ID:1
ExeStack:
--> print(rH(a))
--> (a= 0, print(6))
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
--> 2
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 30
------------------------------------------
ID:1
ExeStack:
--> (a= 0, print(6))
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
--> 2
--> 30
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 30
------------------------------------------
ID:1
ExeStack:
--> (a= 0, print(6))
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
--> 2
--> 30
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 30
------------------------------------------
ID:1
ExeStack:
--> a= 0
--> print(6)
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
--> 2
--> 30
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 30
------------------------------------------
ID:1
ExeStack:
--> a= 0
--> print(6)
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
--> 2
--> 30
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 30
------------------------------------------
ID:1
ExeStack:
--> print(6)
SymTable:
--> Key: a Value: 0
--> Key: v Value: 1
Out:
--> 2
--> 30
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 30
------------------------------------------
ID:1
ExeStack:
--> print(6)
SymTable:
--> Key: a Value: 0
--> Key: v Value: 1
Out:
--> 2
--> 30
FileTable:
Heap:
--> Key: 1 Value: 20
------------------------------------------
ID:1
ExeStack:
SymTable:
--> Key: a Value: 0
--> Key: v Value: 1
Out:
--> 2
--> 30
--> 6
FileTable:
Heap:
--> Key: 1 Value: 20
------------------------------------------
ID:1
ExeStack:
--> (a= 2 + 3 * 5, (b= a + 1, print(b)))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> a= 2 + 3 * 5
--> (b= a + 1, print(b))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> a= 2 + 3 * 5
--> (b= a + 1, print(b))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (b= a + 1, print(b))
SymTable:
--> Key: a Value: 17
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (b= a + 1, print(b))
SymTable:
--> Key: a Value: 17
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> b= a + 1
--> print(b)
SymTable:
--> Key: a Value: 17
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> b= a + 1
--> print(b)
SymTable:
--> Key: a Value: 17
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> print(b)
SymTable:
--> Key: a Value: 17
--> Key: b Value: 18
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> print(b)
SymTable:
--> Key: a Value: 17
--> Key: b Value: 18
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
SymTable:
--> Key: a Value: 17
--> Key: b Value: 18
Out:
--> 18
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (v= 10, (new(v, 20), (new(a, 22), (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6))))))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> (new(v, 20), (new(a, 22), (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6)))))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> (new(v, 20), (new(a, 22), (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6)))))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (new(v, 20), (new(a, 22), (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6)))))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (new(v, 20), (new(a, 22), (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6)))))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(v, 20)
--> (new(a, 22), (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6))))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(v, 20)
--> (new(a, 22), (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6))))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (new(a, 22), (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6))))))
SymTable:
--> Key: v Value: 1
Out:
FileTable:
Heap:
--> Key: 1 Value: 20
------------------------------------------
ID:1
ExeStack:
--> (new(a, 22), (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6))))))
SymTable:
--> Key: v Value: 1
Out:
FileTable:
Heap:
--> Key: 1 Value: 20
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6)))))
SymTable:
--> Key: v Value: 1
Out:
FileTable:
Heap:
--> Key: 1 Value: 20
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6)))))
SymTable:
--> Key: v Value: 1
Out:
FileTable:
Heap:
--> Key: 1 Value: 20
------------------------------------------
ID:1
ExeStack:
--> (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6)))))
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6)))))
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 22
------------------------------------------
ID:1
ExeStack:
--> wH(a, 30)
--> (print(a), (print(rH(a)), (a= 0, print(6))))
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 22
------------------------------------------
ID:1
ExeStack:
--> wH(a, 30)
--> (print(a), (print(rH(a)), (a= 0, print(6))))
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (print(a), (print(rH(a)), (a= 0, print(6))))
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 30
------------------------------------------
ID:1
ExeStack:
--> (print(a), (print(rH(a)), (a= 0, print(6))))
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 30
------------------------------------------
ID:1
ExeStack:
--> print(a)
--> (print(rH(a)), (a= 0, print(6)))
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 30
------------------------------------------
ID:1
ExeStack:
--> print(a)
--> (print(rH(a)), (a= 0, print(6)))
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 30
------------------------------------------
ID:1
ExeStack:
--> (print(rH(a)), (a= 0, print(6)))
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
--> 2
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 30
------------------------------------------
ID:1
ExeStack:
--> (print(rH(a)), (a= 0, print(6)))
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
--> 2
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 30
------------------------------------------
ID:1
ExeStack:
--> print(rH(a))
--> (a= 0, print(6))
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
--> 2
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 30
------------------------------------------
ID:1
ExeStack:
--> print(rH(a))
--> (a= 0, print(6))
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
--> 2
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 30
------------------------------------------
ID:1
ExeStack:
--> (a= 0, print(6))
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
--> 2
--> 30
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 30
------------------------------------------
ID:1
ExeStack:
--> (a= 0, print(6))
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
--> 2
--> 30
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 30
------------------------------------------
ID:1
ExeStack:
--> a= 0
--> print(6)
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
--> 2
--> 30
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 30
------------------------------------------
ID:1
ExeStack:
--> a= 0
--> print(6)
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
--> 2
--> 30
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 30
------------------------------------------
ID:1
ExeStack:
--> print(6)
SymTable:
--> Key: a Value: 0
--> Key: v Value: 1
Out:
--> 2
--> 30
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 30
------------------------------------------
ID:1
ExeStack:
--> print(6)
SymTable:
--> Key: a Value: 0
--> Key: v Value: 1
Out:
--> 2
--> 30
FileTable:
Heap:
--> Key: 1 Value: 20
------------------------------------------
ID:1
ExeStack:
SymTable:
--> Key: a Value: 0
--> Key: v Value: 1
Out:
--> 2
--> 30
--> 6
FileTable:
Heap:
--> Key: 1 Value: 20
------------------------------------------
ID:1
ExeStack:
--> (v= 10, (new(v, 20), (new(a, 22), (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6))))))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> (new(v, 20), (new(a, 22), (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6)))))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> (new(v, 20), (new(a, 22), (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6)))))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (new(v, 20), (new(a, 22), (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6)))))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (new(v, 20), (new(a, 22), (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6)))))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(v, 20)
--> (new(a, 22), (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6))))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(v, 20)
--> (new(a, 22), (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6))))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (new(a, 22), (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6))))))
SymTable:
--> Key: v Value: 1
Out:
FileTable:
Heap:
--> Key: 1 Value: 20
------------------------------------------
ID:1
ExeStack:
--> (new(a, 22), (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6))))))
SymTable:
--> Key: v Value: 1
Out:
FileTable:
Heap:
--> Key: 1 Value: 20
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6)))))
SymTable:
--> Key: v Value: 1
Out:
FileTable:
Heap:
--> Key: 1 Value: 20
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6)))))
SymTable:
--> Key: v Value: 1
Out:
FileTable:
Heap:
--> Key: 1 Value: 20
------------------------------------------
ID:1
ExeStack:
--> (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6)))))
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (v= 10, (new(v, 20), (new(a, 22), (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6))))))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> (new(v, 20), (new(a, 22), (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6)))))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> (new(v, 20), (new(a, 22), (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6)))))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (new(v, 20), (new(a, 22), (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6)))))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (new(v, 20), (new(a, 22), (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6)))))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(v, 20)
--> (new(a, 22), (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6))))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(v, 20)
--> (new(a, 22), (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6))))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (new(a, 22), (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6))))))
SymTable:
--> Key: v Value: 1
Out:
FileTable:
Heap:
--> Key: 1 Value: 20
------------------------------------------
ID:1
ExeStack:
--> (new(a, 22), (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6))))))
SymTable:
--> Key: v Value: 1
Out:
FileTable:
Heap:
--> Key: 1 Value: 20
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6)))))
SymTable:
--> Key: v Value: 1
Out:
FileTable:
Heap:
--> Key: 1 Value: 20
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6)))))
SymTable:
--> Key: v Value: 1
Out:
FileTable:
Heap:
--> Key: 1 Value: 20
------------------------------------------
ID:1
ExeStack:
--> (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6)))))
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6)))))
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 22
------------------------------------------
ID:1
ExeStack:
--> wH(a, 30)
--> (print(a), (print(rH(a)), (a= 0, print(6))))
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 22
------------------------------------------
ID:1
ExeStack:
--> wH(a, 30)
--> (print(a), (print(rH(a)), (a= 0, print(6))))
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (print(a), (print(rH(a)), (a= 0, print(6))))
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 30
------------------------------------------
ID:1
ExeStack:
--> (print(a), (print(rH(a)), (a= 0, print(6))))
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 30
------------------------------------------
ID:1
ExeStack:
--> print(a)
--> (print(rH(a)), (a= 0, print(6)))
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 30
------------------------------------------
ID:1
ExeStack:
--> print(a)
--> (print(rH(a)), (a= 0, print(6)))
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 30
------------------------------------------
ID:1
ExeStack:
--> (print(rH(a)), (a= 0, print(6)))
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
--> 2
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 30
------------------------------------------
ID:1
ExeStack:
--> (print(rH(a)), (a= 0, print(6)))
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
--> 2
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 30
------------------------------------------
ID:1
ExeStack:
--> print(rH(a))
--> (a= 0, print(6))
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
--> 2
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 30
------------------------------------------
ID:1
ExeStack:
--> print(rH(a))
--> (a= 0, print(6))
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
--> 2
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 30
------------------------------------------
ID:1
ExeStack:
--> (a= 0, print(6))
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
--> 2
--> 30
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 30
------------------------------------------
ID:1
ExeStack:
--> (a= 0, print(6))
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
--> 2
--> 30
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 30
------------------------------------------
ID:1
ExeStack:
--> a= 0
--> print(6)
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
--> 2
--> 30
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 30
------------------------------------------
ID:1
ExeStack:
--> a= 0
--> print(6)
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
--> 2
--> 30
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 30
------------------------------------------
ID:1
ExeStack:
--> print(6)
SymTable:
--> Key: a Value: 0
--> Key: v Value: 1
Out:
--> 2
--> 30
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 30
------------------------------------------
ID:1
ExeStack:
--> print(6)
SymTable:
--> Key: a Value: 0
--> Key: v Value: 1
Out:
--> 2
--> 30
FileTable:
Heap:
--> Key: 1 Value: 20
------------------------------------------
ID:1
ExeStack:
SymTable:
--> Key: a Value: 0
--> Key: v Value: 1
Out:
--> 2
--> 30
--> 6
FileTable:
Heap:
--> Key: 1 Value: 20
------------------------------------------
ID:1
ExeStack:
--> (v= 10, (new(v, 20), (new(a, 22), (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6))))))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> (new(v, 20), (new(a, 22), (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6)))))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> (new(v, 20), (new(a, 22), (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6)))))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (new(v, 20), (new(a, 22), (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6)))))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (new(v, 20), (new(a, 22), (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6)))))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(v, 20)
--> (new(a, 22), (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6))))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(v, 20)
--> (new(a, 22), (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6))))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (new(a, 22), (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6))))))
SymTable:
--> Key: v Value: 1
Out:
FileTable:
Heap:
--> Key: 1 Value: 20
------------------------------------------
ID:1
ExeStack:
--> (new(a, 22), (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6))))))
SymTable:
--> Key: v Value: 1
Out:
FileTable:
Heap:
--> Key: 1 Value: 20
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6)))))
SymTable:
--> Key: v Value: 1
Out:
FileTable:
Heap:
--> Key: 1 Value: 20
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6)))))
SymTable:
--> Key: v Value: 1
Out:
FileTable:
Heap:
--> Key: 1 Value: 20
------------------------------------------
ID:1
ExeStack:
--> (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6)))))
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (wH(a, 30), (print(a), (print(rH(a)), (a= 0, print(6)))))
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 22
------------------------------------------
ID:1
ExeStack:
--> wH(a, 30)
--> (print(a), (print(rH(a)), (a= 0, print(6))))
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 22
------------------------------------------
ID:1
ExeStack:
--> wH(a, 30)
--> (print(a), (print(rH(a)), (a= 0, print(6))))
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (print(a), (print(rH(a)), (a= 0, print(6))))
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 30
------------------------------------------
ID:1
ExeStack:
--> (print(a), (print(rH(a)), (a= 0, print(6))))
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 30
------------------------------------------
ID:1
ExeStack:
--> print(a)
--> (print(rH(a)), (a= 0, print(6)))
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 30
------------------------------------------
ID:1
ExeStack:
--> print(a)
--> (print(rH(a)), (a= 0, print(6)))
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 30
------------------------------------------
ID:1
ExeStack:
--> (print(rH(a)), (a= 0, print(6)))
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
--> 2
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 30
------------------------------------------
ID:1
ExeStack:
--> (print(rH(a)), (a= 0, print(6)))
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
--> 2
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 30
------------------------------------------
ID:1
ExeStack:
--> print(rH(a))
--> (a= 0, print(6))
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
--> 2
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 30
------------------------------------------
ID:1
ExeStack:
--> print(rH(a))
--> (a= 0, print(6))
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
--> 2
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 30
------------------------------------------
ID:1
ExeStack:
--> (a= 0, print(6))
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
--> 2
--> 30
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 30
------------------------------------------
ID:1
ExeStack:
--> (a= 0, print(6))
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
--> 2
--> 30
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 30
------------------------------------------
ID:1
ExeStack:
--> a= 0
--> print(6)
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
--> 2
--> 30
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 30
------------------------------------------
ID:1
ExeStack:
--> a= 0
--> print(6)
SymTable:
--> Key: a Value: 2
--> Key: v Value: 1
Out:
--> 2
--> 30
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 30
------------------------------------------
ID:1
ExeStack:
--> print(6)
SymTable:
--> Key: a Value: 0
--> Key: v Value: 1
Out:
--> 2
--> 30
FileTable:
Heap:
--> Key: 1 Value: 20
--> Key: 2 Value: 30
------------------------------------------
ID:1
ExeStack:
--> print(6)
SymTable:
--> Key: a Value: 0
--> Key: v Value: 1
Out:
--> 2
--> 30
FileTable:
Heap:
--> Key: 1 Value: 20
------------------------------------------
ID:1
ExeStack:
SymTable:
--> Key: a Value: 0
--> Key: v Value: 1
Out:
--> 2
--> 30
--> 6
FileTable:
Heap:
--> Key: 1 Value: 20
------------------------------------------
ID:1
ExeStack:
--> ((openFile(fname, src/testfiles/test.in), ReadFile(fname, val)), (print(val), (If val Then (ReadFile(fname, val), print(val)) Else print(0), CloseRFile(fname))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (openFile(fname, src/testfiles/test.in), ReadFile(fname, val))
--> (print(val), (If val Then (ReadFile(fname, val), print(val)) Else print(0), CloseRFile(fname)))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (openFile(fname, src/testfiles/test.in), ReadFile(fname, val))
--> (print(val), (If val Then (ReadFile(fname, val), print(val)) Else print(0), CloseRFile(fname)))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> openFile(fname, src/testfiles/test.in)
--> ReadFile(fname, val)
--> (print(val), (If val Then (ReadFile(fname, val), print(val)) Else print(0), CloseRFile(fname)))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> openFile(fname, src/testfiles/test.in)
--> ReadFile(fname, val)
--> (print(val), (If val Then (ReadFile(fname, val), print(val)) Else print(0), CloseRFile(fname)))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> ReadFile(fname, val)
--> (print(val), (If val Then (ReadFile(fname, val), print(val)) Else print(0), CloseRFile(fname)))
SymTable:
--> Key: fname Value: 1
Out:
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
--> ((openFile(file, afile.in), ReadFile(file, ana)), CloseRFile(file))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (openFile(file, afile.in), ReadFile(file, ana))
--> CloseRFile(file)
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (openFile(file, afile.in), ReadFile(file, ana))
--> CloseRFile(file)
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> openFile(file, afile.in)
--> ReadFile(file, ana)
--> CloseRFile(file)
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> openFile(file, afile.in)
--> ReadFile(file, ana)
--> CloseRFile(file)
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> ReadFile(file, ana)
--> CloseRFile(file)
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> ReadFile(file, ana)
--> CloseRFile(file)
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> ((openFile(fname, src/testfiles/test.in), ReadFile(fname, val)), (print(val), (If val Then (ReadFile(fname, val), print(val)) Else print(0), CloseRFile(fname))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (openFile(fname, src/testfiles/test.in), ReadFile(fname, val))
--> (print(val), (If val Then (ReadFile(fname, val), print(val)) Else print(0), CloseRFile(fname)))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (openFile(fname, src/testfiles/test.in), ReadFile(fname, val))
--> (print(val), (If val Then (ReadFile(fname, val), print(val)) Else print(0), CloseRFile(fname)))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> openFile(fname, src/testfiles/test.in)
--> ReadFile(fname, val)
--> (print(val), (If val Then (ReadFile(fname, val), print(val)) Else print(0), CloseRFile(fname)))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> openFile(fname, src/testfiles/test.in)
--> ReadFile(fname, val)
--> (print(val), (If val Then (ReadFile(fname, val), print(val)) Else print(0), CloseRFile(fname)))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> ReadFile(fname, val)
--> (print(val), (If val Then (ReadFile(fname, val), print(val)) Else print(0), CloseRFile(fname)))
SymTable:
--> Key: fname Value: 1
Out:
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
--> ReadFile(fname, val)
--> (print(val), (If val Then (ReadFile(fname, val), print(val)) Else print(0), CloseRFile(fname)))
SymTable:
--> Key: fname Value: 1
Out:
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
--> (print(val), (If val Then (ReadFile(fname, val), print(val)) Else print(0), CloseRFile(fname)))
SymTable:
--> Key: val Value: 15
--> Key: fname Value: 1
Out:
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
--> (print(val), (If val Then (ReadFile(fname, val), print(val)) Else print(0), CloseRFile(fname)))
SymTable:
--> Key: val Value: 15
--> Key: fname Value: 1
Out:
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
--> print(val)
--> (If val Then (ReadFile(fname, val), print(val)) Else print(0), CloseRFile(fname))
SymTable:
--> Key: val Value: 15
--> Key: fname Value: 1
Out:
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
--> ((openFile(fname, src/testfiles/test.in), ReadFile(fname, val)), (print(val), (If val Then (ReadFile(fname, val), print(val)) Else print(0), CloseRFile(fname))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (openFile(fname, src/testfiles/test.in), ReadFile(fname, val))
--> (print(val), (If val Then (ReadFile(fname, val), print(val)) Else print(0), CloseRFile(fname)))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (openFile(fname, src/testfiles/test.in), ReadFile(fname, val))
--> (print(val), (If val Then (ReadFile(fname, val), print(val)) Else print(0), CloseRFile(fname)))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> openFile(fname, src/testfiles/test.in)
--> ReadFile(fname, val)
--> (print(val), (If val Then (ReadFile(fname, val), print(val)) Else print(0), CloseRFile(fname)))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> openFile(fname, src/testfiles/test.in)
--> ReadFile(fname, val)
--> (print(val), (If val Then (ReadFile(fname, val), print(val)) Else print(0), CloseRFile(fname)))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> ReadFile(fname, val)
--> (print(val), (If val Then (ReadFile(fname, val), print(val)) Else print(0), CloseRFile(fname)))
SymTable:
--> Key: fname Value: 1
Out:
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
--> ReadFile(fname, val)
--> (print(val), (If val Then (ReadFile(fname, val), print(val)) Else print(0), CloseRFile(fname)))
SymTable:
--> Key: fname Value: 1
Out:
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
--> (print(val), (If val Then (ReadFile(fname, val), print(val)) Else print(0), CloseRFile(fname)))
SymTable:
--> Key: val Value: 15
--> Key: fname Value: 1
Out:
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
--> (print(val), (If val Then (ReadFile(fname, val), print(val)) Else print(0), CloseRFile(fname)))
SymTable:
--> Key: val Value: 15
--> Key: fname Value: 1
Out:
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
--> print(val)
--> (If val Then (ReadFile(fname, val), print(val)) Else print(0), CloseRFile(fname))
SymTable:
--> Key: val Value: 15
--> Key: fname Value: 1
Out:
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
--> print(val)
--> (If val Then (ReadFile(fname, val), print(val)) Else print(0), CloseRFile(fname))
SymTable:
--> Key: val Value: 15
--> Key: fname Value: 1
Out:
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
--> (If val Then (ReadFile(fname, val), print(val)) Else print(0), CloseRFile(fname))
SymTable:
--> Key: val Value: 15
--> Key: fname Value: 1
Out:
--> 15
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
--> (If val Then (ReadFile(fname, val), print(val)) Else print(0), CloseRFile(fname))
SymTable:
--> Key: val Value: 15
--> Key: fname Value: 1
Out:
--> 15
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
--> If val Then (ReadFile(fname, val), print(val)) Else print(0)
--> CloseRFile(fname)
SymTable:
--> Key: val Value: 15
--> Key: fname Value: 1
Out:
--> 15
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
--> If val Then (ReadFile(fname, val), print(val)) Else print(0)
--> CloseRFile(fname)
SymTable:
--> Key: val Value: 15
--> Key: fname Value: 1
Out:
--> 15
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
--> (ReadFile(fname, val), print(val))
--> CloseRFile(fname)
SymTable:
--> Key: val Value: 15
--> Key: fname Value: 1
Out:
--> 15
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
--> (ReadFile(fname, val), print(val))
--> CloseRFile(fname)
SymTable:
--> Key: val Value: 15
--> Key: fname Value: 1
Out:
--> 15
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
--> ReadFile(fname, val)
--> print(val)
--> CloseRFile(fname)
SymTable:
--> Key: val Value: 15
--> Key: fname Value: 1
Out:
--> 15
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
--> ReadFile(fname, val)
--> print(val)
--> CloseRFile(fname)
SymTable:
--> Key: val Value: 15
--> Key: fname Value: 1
Out:
--> 15
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
--> print(val)
--> CloseRFile(fname)
SymTable:
--> Key: val Value: 50
--> Key: fname Value: 1
Out:
--> 15
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
--> print(val)
--> CloseRFile(fname)
SymTable:
--> Key: val Value: 50
--> Key: fname Value: 1
Out:
--> 15
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
--> CloseRFile(fname)
SymTable:
--> Key: val Value: 50
--> Key: fname Value: 1
Out:
--> 15
--> 50
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
--> CloseRFile(fname)
SymTable:
--> Key: val Value: 50
--> Key: fname Value: 1
Out:
--> 15
--> 50
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
SymTable:
--> Key: val Value: 50
--> Key: fname Value: 1
Out:
--> 15
--> 50
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> ((v= 10, new(a, 22)), (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a)))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (v= 10, new(a, 22))
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (v= 10, new(a, 22))
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> ((v= 10, new(a, 22)), (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a)))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (v= 10, new(a, 22))
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (v= 10, new(a, 22))
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> ((openFile(fname, src/testfiles/test.in), ReadFile(fname, val)), (print(val), (If val Then (ReadFile(fname, val), print(val)) Else print(0), CloseRFile(fname))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (openFile(fname, src/testfiles/test.in), ReadFile(fname, val))
--> (print(val), (If val Then (ReadFile(fname, val), print(val)) Else print(0), CloseRFile(fname)))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (openFile(fname, src/testfiles/test.in), ReadFile(fname, val))
--> (print(val), (If val Then (ReadFile(fname, val), print(val)) Else print(0), CloseRFile(fname)))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> openFile(fname, src/testfiles/test.in)
--> ReadFile(fname, val)
--> (print(val), (If val Then (ReadFile(fname, val), print(val)) Else print(0), CloseRFile(fname)))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> openFile(fname, src/testfiles/test.in)
--> ReadFile(fname, val)
--> (print(val), (If val Then (ReadFile(fname, val), print(val)) Else print(0), CloseRFile(fname)))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> ReadFile(fname, val)
--> (print(val), (If val Then (ReadFile(fname, val), print(val)) Else print(0), CloseRFile(fname)))
SymTable:
--> Key: fname Value: 1
Out:
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
--> ReadFile(fname, val)
--> (print(val), (If val Then (ReadFile(fname, val), print(val)) Else print(0), CloseRFile(fname)))
SymTable:
--> Key: fname Value: 1
Out:
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
--> (print(val), (If val Then (ReadFile(fname, val), print(val)) Else print(0), CloseRFile(fname)))
SymTable:
--> Key: val Value: 15
--> Key: fname Value: 1
Out:
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
--> (print(val), (If val Then (ReadFile(fname, val), print(val)) Else print(0), CloseRFile(fname)))
SymTable:
--> Key: val Value: 15
--> Key: fname Value: 1
Out:
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
--> print(val)
--> (If val Then (ReadFile(fname, val), print(val)) Else print(0), CloseRFile(fname))
SymTable:
--> Key: val Value: 15
--> Key: fname Value: 1
Out:
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
--> print(val)
--> (If val Then (ReadFile(fname, val), print(val)) Else print(0), CloseRFile(fname))
SymTable:
--> Key: val Value: 15
--> Key: fname Value: 1
Out:
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
--> (If val Then (ReadFile(fname, val), print(val)) Else print(0), CloseRFile(fname))
SymTable:
--> Key: val Value: 15
--> Key: fname Value: 1
Out:
--> 15
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
--> (If val Then (ReadFile(fname, val), print(val)) Else print(0), CloseRFile(fname))
SymTable:
--> Key: val Value: 15
--> Key: fname Value: 1
Out:
--> 15
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
--> If val Then (ReadFile(fname, val), print(val)) Else print(0)
--> CloseRFile(fname)
SymTable:
--> Key: val Value: 15
--> Key: fname Value: 1
Out:
--> 15
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
--> If val Then (ReadFile(fname, val), print(val)) Else print(0)
--> CloseRFile(fname)
SymTable:
--> Key: val Value: 15
--> Key: fname Value: 1
Out:
--> 15
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
--> (ReadFile(fname, val), print(val))
--> CloseRFile(fname)
SymTable:
--> Key: val Value: 15
--> Key: fname Value: 1
Out:
--> 15
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
--> (ReadFile(fname, val), print(val))
--> CloseRFile(fname)
SymTable:
--> Key: val Value: 15
--> Key: fname Value: 1
Out:
--> 15
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
--> ReadFile(fname, val)
--> print(val)
--> CloseRFile(fname)
SymTable:
--> Key: val Value: 15
--> Key: fname Value: 1
Out:
--> 15
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
--> ReadFile(fname, val)
--> print(val)
--> CloseRFile(fname)
SymTable:
--> Key: val Value: 15
--> Key: fname Value: 1
Out:
--> 15
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
--> print(val)
--> CloseRFile(fname)
SymTable:
--> Key: val Value: 50
--> Key: fname Value: 1
Out:
--> 15
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
--> print(val)
--> CloseRFile(fname)
SymTable:
--> Key: val Value: 50
--> Key: fname Value: 1
Out:
--> 15
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
--> CloseRFile(fname)
SymTable:
--> Key: val Value: 50
--> Key: fname Value: 1
Out:
--> 15
--> 50
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
--> CloseRFile(fname)
SymTable:
--> Key: val Value: 50
--> Key: fname Value: 1
Out:
--> 15
--> 50
FileTable:
--> Key: 1 Value: src/testfiles/test.in
Heap:
------------------------------------------
ID:1
ExeStack:
SymTable:
--> Key: val Value: 50
--> Key: fname Value: 1
Out:
--> 15
--> 50
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> ((v= 10, new(a, 22)), (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a)))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (v= 10, new(a, 22))
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (v= 10, new(a, 22))
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> Fork((wH(a, 30), (v= 32, (print(v), print(rH(a))))))
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> Fork((wH(a, 30), (v= 32, (print(v), print(rH(a))))))
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> (wH(a, 30), (v= 32, (print(v), print(rH(a)))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> (wH(a, 30), (v= 32, (print(v), print(rH(a)))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> wH(a, 30)
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> wH(a, 30)
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> v= 32
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> v= 32
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
--> ((v= 10, new(a, 22)), (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a)))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (v= 10, new(a, 22))
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (v= 10, new(a, 22))
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> Fork((wH(a, 30), (v= 32, (print(v), print(rH(a))))))
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> Fork((wH(a, 30), (v= 32, (print(v), print(rH(a))))))
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> (wH(a, 30), (v= 32, (print(v), print(rH(a)))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> (wH(a, 30), (v= 32, (print(v), print(rH(a)))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> wH(a, 30)
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> wH(a, 30)
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> v= 32
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> v= 32
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
--> (a= 2 + 3 * 5, (b= a + 1, print(b)))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> a= 2 + 3 * 5
--> (b= a + 1, print(b))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> a= 2 + 3 * 5
--> (b= a + 1, print(b))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (b= a + 1, print(b))
SymTable:
--> Key: a Value: 17
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (b= a + 1, print(b))
SymTable:
--> Key: a Value: 17
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> b= a + 1
--> print(b)
SymTable:
--> Key: a Value: 17
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> b= a + 1
--> print(b)
SymTable:
--> Key: a Value: 17
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> print(b)
SymTable:
--> Key: a Value: 17
--> Key: b Value: 18
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> print(b)
SymTable:
--> Key: a Value: 17
--> Key: b Value: 18
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
SymTable:
--> Key: a Value: 17
--> Key: b Value: 18
Out:
--> 18
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> ((v= 10, new(a, 22)), (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a)))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (v= 10, new(a, 22))
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (v= 10, new(a, 22))
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> v= 10
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> new(a, 22)
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: v Value: 10
Out:
FileTable:
Heap:
------------------------------------------
ID:1
ExeStack:
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (Fork((wH(a, 30), (v= 32, (print(v), print(rH(a)))))), (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> Fork((wH(a, 30), (v= 32, (print(v), print(rH(a))))))
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> Fork((wH(a, 30), (v= 32, (print(v), print(rH(a))))))
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> (wH(a, 30), (v= 32, (print(v), print(rH(a)))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> (wH(a, 30), (v= 32, (print(v), print(rH(a)))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> wH(a, 30)
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:10
ExeStack:
--> wH(a, 30)
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
FileTable:
Heap:
--> Key: 1 Value: 22
------------------------------------------
ID:1
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (v= 32, (print(v), print(rH(a))))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:1
ExeStack:
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> v= 32
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> v= 32
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 10
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> (print(v), print(rH(a)))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(v)
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
--> print(rH(a))
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
ID:10
ExeStack:
SymTable:
--> Key: a Value: 1
--> Key: v Value: 32
Out:
--> 10
--> 30
--> 32
--> 30
FileTable:
Heap:
--> Key: 1 Value: 30
------------------------------------------
